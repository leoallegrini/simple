package tup.simple.controllers;

import java.sql.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


import tup.simple.models.fichamedica;
import tup.simple.repositories.fichamedicaRepository;

@Controller // This means that this class is a Controller
// La URL que vaya en la anotación habrá que agregarla detrás del puerto :8080
// en todas las llamadas a esta aplicación.
// Por ejemplo @RequestMapping("/user") resultaría en lo siguiente:
// localhost:8080/anime.... y detrás de esto habría que agregar el
// resto de la URL.
// En este caso, no necesitamos nada, y queda simplemente localhost:8080
@RequestMapping("/fichamedica")
public class fichamedicaController {
    // This means to get the bean called userRepository
    // which is auto-generated by Spring, we will use it to handle the data
    @Autowired
    private fichamedicaRepository _fichamedicaRepository;

    @PostMapping("/add") // Map ONLY POST Requests
    public @ResponseBody String addNewFichaMedica(@RequestParam Long idmedfic, @RequestParam String obrasoc,
    @RequestParam String preocupacional, @RequestParam Date fechapreocupacional, @RequestParam String patprevias) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        fichamedica n = new fichamedica();
        n.setIdmedfic(idmedfic);
        n.setObrasoc(obrasoc);
        n.setPreocupacional(preocupacional);
        n.setFechapreocupacional(fechapreocupacional);
        n.setPatprevias(patprevias);
        _fichamedicaRepository.save(n);
        return "Saved";
    }

    @PostMapping("/delete/{id}") // Map ONLY POST Requests
    public @ResponseBody String deleteFichaMedicaById(@PathVariable Long idmedfic) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        _fichamedicaRepository.deleteById(idmedfic);
        return "Deleted";
    }

    @GetMapping("/all")
    public @ResponseBody String getAllFichaMedica() {
        // This returns a JSON or XML with the users
        Iterable<fichamedica> iterable = _fichamedicaRepository.findAll();
        String resp = "<style>\n"
                +"#users {\n"
                +"  font-family: Arial, Helvetica, sans-serif;\n"
                +"  border-collapse: collapse;\n"
                +"  width: 100%;}\n"

                +"#users td, #users th {\n"
                +"  border: 1px solid #ddd;\n"
                +"  padding: 8px;}\n"

                +"#users tr:nth-child(even){background-color: #f2f2f2;}\n"

                +"#users tr:hover {background-color: #ddd;}\n"

                +"#users th {\n"
                +"  padding-top: 12px;\n"
                +"  padding-bottom: 12px;\n"
                +"  text-align: left;\n"
                +"  background-color: #04AA6D;\n"
                +"  color: white;}\n"
                +"</style>";
        resp += "<table id ='users'>"
                + "<tr>"
                + "<th>Id</th>"
                + "<th>Obra Social</th>"
                + "<th>Preocupacional</th>"
                + "<th>Fecha Preocupacional</th>"
                + "<th>Patologías Previas</th>"
                + "</tr>";
        // No puedo usar forEach() con una función lambda
        // porque el scope de las variables no lo permite.
        for (fichamedica fichamedica : iterable) {
            resp += "<tr>"
                    + "<td>" + fichamedica.getIdmedfic() + "</td>"
                    + "<td>" + fichamedica.getObrasoc() + "</td>"
                    + "<td>" + fichamedica.getPreocupacional() + "</td>"
                    + "<td>" + fichamedica.getFechapreocupacional() + "</td>"
                    + "<td>" + fichamedica.getPatprevias() + "</td>"
                    + "</tr>";
        }
        return resp + "</table>";
    }

    @GetMapping("")
    public @ResponseBody String hola() {
        return "Hola";
    }
}